// EXAM

.container {
  .exam-content {
    @include setBorder($clr-900);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    padding-top: pxToRem(30px);
    box-shadow: 4px 4px 15px rgba(0, 0, 0, 0.25);
    width: pxToRem(535px);
    height: pxToRem(360px);

    .head {
      position: absolute;
      top: pxToRem(-25px);
      background-color: $clr-900;
      color: $clr-100;
      font-size: pxToRem(23px);
      @include setBorder($clr-900);
      padding: pxToRem(12px) pxToRem(40px);

      &.wrong {
        background-color: $clr-red;
        @include setBorder($clr-red);
      }
    }

    .exam-num {
      position: absolute;
      top: pxToRem(-19px);
      right: pxToRem(40px);
      background-color: $clr-100;
      padding: pxToRem(8px);
      font-size: pxToRem(20px);
      font-weight: 400;
    }

    .input-line {
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: $clr-900;
      font-weight: 400;
      // padding: 0 pxToRem(20px);
      font-size: pxToRem(20px);
      position: relative;

      label {
        font-weight: 600;
        position: absolute;
        left: 0;
        height: 100%;
        display: flex;
        align-items: center;
        user-select: none;
        padding: pxToRem(20px);
        border-radius: 4px;
      }

      input {
        all: unset;
        text-align: center;
        width: pxToRem(400px);
        padding: pxToRem(20px) pxToRem(20px);
      }

      &:last-of-type {
        background-color: $clr-900;
        color: $clr-100;
        border-radius: 4px;
        margin-top: pxToRem(40px);

        label {
          border-radius: 4px;
          background-color: inherit;
          font-weight: 400;
        }

        &.try-again {
          background-color: $clr-red;
        }

        &.wrong {
          background-color: $clr-100;
          color: $clr-900;
          margin-top: pxToRem(20px);

          label {
            font-weight: 500;
          }

          input {
            text-decoration: underline;
          }
        }
      }
    }

    p.try-again {
      font-size: pxToRem(15px);
      color: $clr-red;
      font-weight: 400;
      text-align: center;
      margin-top: pxToRem(20px);
    }

    .wrong-answer {
      display: flex;
      margin-top: pxToRem(20px);
      user-select: none;

      p {
        margin-left: pxToRem(20px);
        color: $clr-red;
        text-decoration: line-through;
        font-size: pxToRem(20px);
        font-weight: 400;
      }
    }

    button {
      all: unset;
      cursor: pointer;
      color: $clr-900;
      font-size: pxToRem(20px);
      font-weight: 600;
      padding: pxToRem(20px) pxToRem(25px);
      margin-top: pxToRem(30px);
      position: relative;
      overflow: hidden;

      .underline {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 0;
        height: 0;
        border-left: solid 1px $clr-900;
        border-bottom: solid 1px $clr-900;
      }
    }

    .svg-container {
      position: relative;
      display: flex;
    }

    .cover {
      position: absolute;
      background-color: $clr-100;
      right: 0;
      width: 100%;
      height: 100%;
      transform: rotate(180deg);
      z-index: 99;
    }

    svg {
      fill: $clr-900;
    }

    .spinner {
      animation: spinner;
      animation-duration: 600ms;
      animation-iteration-count: infinite;
    }
  }
}

@media (max-width: pxToRem(550px)) {
  .exam-content {
    width: 100vw !important;

    input {
      width: 80vw !important;
    }
  }
}

@media (max-width: pxToRem(480px)) {
  .exam-content {
    width: 100vw !important;
    border: none !important;
    box-shadow: none !important;

    h1.head {
      display: none;
    }

    h4.exam-num {
      padding: pxToRem(8px) pxToRem(20px) !important;
      font-size: pxToRem(23px) !important;
      right: unset !important;
      left: 50%;
      transform: translate(-50%, 0);
    }

    .input-line:first-of-type {
      label {
        display: none;
      }
    }
  }
}

/* ====== 
keyframes
====== */

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}
